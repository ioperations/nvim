snippet inp "include cpp"
#include <${1:iostream>}
endsnippet

snippet fora " for auto ptr"
for(auto ${1:ptr} : ${2:vector}){
	std::cout<< $1 << std::endl ;
}
endsnippet

snippet usi "using namespace"
using namespace ${1:std};
endsnippet

snippet sort " for auto ptr"
sort(${1:a}.begin(),$1.end());
endsnippet


snippet find " for auto ptr"
find(${1:a}.begin(),$1.end(),${2:1});
endsnippet

snippet forj "for loop"
for(int ${1:i}=0; $1!=${2:count}; $1++){

}
endsnippet

snippet gtest "gtest framework"
#include <iostream>
#include <gtest/gtest.h>

TEST(${1:testName},${2:testNum}){

}

int main(int argc, char *argv[])
{
	testing::InitGoogleTest(&argc,argv);
	return RUN_ALL_TESTS();
}

endsnippet

post_jump "if snip.tabstop == 0 : split_line(snip.tabstops[4].current_text)"
snippet walkarray "遍历数组"
for(int i=0;i<${1:Row};i++){
	for(int j=0;j<${2:Col};j++){
		if(rand()%2){
			*((int*)${3:Array} +i*$2 + j) = 0;
		}
	}
}
endsnippet
