# vim: set fenc=utf-8 ft=dosini:
# define a new task named "file-build"
[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command:cpp=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6  -height=0.6 clang++ "$(VIM_FILEPATH)" -g -std=c++17 -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"  && ./$(VIM_FILENOEXT)
command:c=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6  -height=0.6 clang "$(VIM_FILEPATH)" -g -std=gnu99 -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"  && ./$(VIM_FILENOEXT)
command:rust=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 cargo build
command:go=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 go build .

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

# define a new task named "file-build"

[project-build]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 make -j4
command:java=AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 mvn test
command:rust=AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 cargo build
command:go=AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 go build .
# set the working directory to the project root.
cwd=$(VIM_ROOT)

output=quickfix

[project-run]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 make run
cwd=$(VIM_ROOT)
output=quickfix

[ninja-rebuild]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 ninja -C build clean && ninja -C build
cwd=$(VIM_ROOT)
output=quickfix

[make-rebuild]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 make -C build clean && make -C build
cwd=$(VIM_ROOT)
output=quickfix

[ninja-test]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 ninja -C build test
cwd=$(VIM_ROOT)
output=quickfix

[make clean]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 make clean
cwd=$(VIM_ROOT)
output=quickfix

[ninja clean]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 ninja -C build clean
cwd=$(VIM_ROOT)
output=quickfix

[cmake-ninja]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja -B build . && ninja -C build 
cws=$(VIM_ROOT)
output=quickfix

[cmake-make]
command=:AsyncRun -mode=term -pos=floaterm -position=bottomright -width=0.6 -height=0.6 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -B build . && make -j`nproc`
cws=$(VIM_ROOT)
output=quickfix
