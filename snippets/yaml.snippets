snippet pod "pod schema"
    ---
    ${1:# yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/pod.json}

snippet svc "service schema"
    ---
    ${1:# yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/service.json}

snippet deploy "deployment schema"
    ---
    ${1:# yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json}

snippet pv "pv schema"
    ---
    ${1:# yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolume.json}

snippet pvc "pvc schema"
    ---
    ${1:# yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolumeclaim.json}

snippet deploy "deployment template"
    ---
    # yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ${1:nginx-deployment}
      labels:
        ${2:app: web}
    spec:
      selector:
        matchLabels:
          $2
      replicas: 5
      strategy:
        type: RollingUpdate
      template:
        metadata:
          name: nginx-deployment-pod
          labels:
            app: web
        spec:
          containers:
          - name: task-pv-container
            image: nginx:latest
            imagePullPolicy: IfNotPresent
 
snippet svc "svc template"
    ---
    # yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/service.json
    apiVersion: v1
    kind: Service
    metadata:
      name: ${1:svc_template}
    spec:
      selector:
        app: web
      type: NodePort
      ports:
        - protocol: TCP
          port: 80
          targetPort: 80



snippet pvc "pvc template"
    ---
    # yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolumeclaim.json
    kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: task-pv-claim
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi


snippet pv "pv template"
    ---
    # yaml-language-server: $$schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolume.json
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: ${1:pv_template}
      labels:
        type: local
    spec:
      storageClassName: manual
      capacity:
        storage: 10Gi
      accessModes:
        - ReadWriteOnce
      hostPath:
        path: ${@:"/data/pv"}
