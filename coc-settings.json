{
  "yank.enableCompletion": true,
  "diagnostic-languageserver.trace.server": "verbose",
  "codeLens.enable": true,
  "inlayHint.enable": true,
  "inlayHint.refreshOnInsertMode": true,
  "codeLens.position": "right_align",
  "codeLens.subseparator": "|",
  "explorer.icon.enableNerdfont": true,
  "translator.engines": ["bing", "google", "youdao"],
  "clangd.disableCompletion": false,
  "clangd.arguments": [
    "--completion-style=detailed",
    "--background-index",
    "--suggest-missing-includes",
    "--all-scopes-completion",
    "--header-insertion=iwyu",
    "--offset-encoding=utf-32",
    "--enable-config",
    "-log=verbose"
  ],
  "suggest.completionItemKindLabels": {
    "text": "t",
    "method": "Û∞Üß ",
    "file": "Û∞àô ",
    "module": "Óò§ ",
    "class": "Û∞åó ",
    "property": "Óûõ ",
    "field": "Óúñ ",
    "constructor": "Ôê• ",
    "enum": "Û∞ïò ",
    "interface": "Û∞ïò ",
    "function": "Û∞äï ",
    "variable": "Û∞Üß ",
    "constant": "Û∞èø ",
    "operator": "Û∞Üï ",
    "enumMember": "Û∞ïò ",
    "unit": "Óò§ ",
    "value": "Óúñ ",
    "folder": "Ó™É ",
    "struct": "Û∞åó ",
    "typeParameter": "Û∞äÑ ",
    "event": "ÔÉß ",
    "snippet": "S",
    "keyword": "Û∞åã ",
    "color": "üí§",
    "reference": "‚Äª ",
    "default": "‚ù§Ô∏è "
  },
  "diagnostic.virtualText": false,
  "coc.preferences.formatOnSave": false,
  "suggest.removeDuplicateItems": true,
  "suggest.labelMaxLength": 60,
  "suggest.triggerAfterInsertEnter": true,
  "suggest.snippetIndicator": "üê∂",
  "jedi.enable": true,
  "jedi.startupMessage": false,
  "jedi.markupKindPreferred": "markdown",
  "jedi.trace.server": "verbose",
  "jedi.jediSettings.autoImportModules": [],
  "jedi.jediSettings.caseInsensitiveCompletion": true,
  "jedi.jediSettings.debug": false,
  "jedi.executable.command": "jedi-language-server",
  "jedi.executable.args": [],
  "jedi.codeAction.nameExtractFunction": "jls_extract_def",
  "jedi.codeAction.nameExtractVariable": "jls_extract_var",
  "jedi.completion.disableSnippets": false,
  "jedi.completion.resolveEagerly": false,
  "jedi.completion.ignorePatterns": [],
  "jedi.diagnostics.enable": true,
  "jedi.diagnostics.didOpen": true,
  "jedi.diagnostics.didChange": true,
  "jedi.diagnostics.didSave": true,
  "jedi.hover.enable": true,
  "jedi.hover.disable.keyword.all": false,
  "jedi.hover.disable.keyword.names": [],
  "jedi.hover.disable.keyword.fullNames": [],
  "jedi.workspace.extraPaths": [],
  "jedi.workspace.symbols.maxSymbols": 20,
  "jedi.workspace.symbols.ignoreFolders": [
    ".nox",
    ".tox",
    ".venv",
    "__pycache__",
    "venv"
  ],
  "tsserver.trace.server": "verbose",
  "javascript.validate.enable": false,
  "rust-analyzer.enable": true,
  "rust-analyzer.lens.enable": false,
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.typeHints.enable": false,
  "rust-analyzer.inlayHints.renderColons": false,
  "rust-analyzer.inlayHints.chainingHints.enable": false,
  "rust-analyzer.inlayHints.reborrowHints.enable": "never",
  "rust-analyzer.inlayHints.closingBraceHints.enable": false,
  "rust-analyzer.inlayHints.discriminantHints.enable": "never",
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.trace.server": "verbose",
  "rust-analyzer.cargo.unsetTest": ["core"],
  "rust-analyzer.debug.runtime": "vimspector",
  "rust-analyzer.debug.vimspector.configuration.name": "rust:launch",
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.completion.postfix.enable": true,
  "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
  "rust-analyzer.terminal.startinsert": false,
  "rust-analyzer.completion.snippets.custom": {
    "Arc::new": {
      "postfix": "arc",
      "body": "Arc::new(${receiver})",
      "requires": "std::sync::Arc",
      "description": "Put the expression into an `Arc`",
      "scope": "expr"
    },
    "Rc::new": {
      "postfix": "rc",
      "body": "Rc::new(${receiver})",
      "requires": "std::rc::Rc",
      "description": "Put the expression into an `Rc`",
      "scope": "expr"
    },
    "Box::pin": {
      "postfix": "pinbox",
      "body": "Box::pin(${receiver})",
      "requires": "std::boxed::Box",
      "description": "Put the expression into a pinned `Box`",
      "scope": "expr"
    },
    "Ok": {
      "postfix": "ok",
      "body": "Ok(${receiver})",
      "description": "Wrap the expression in a `Result::Ok`",
      "scope": "expr"
    },
    "Err": {
      "postfix": "err",
      "body": "Err(${receiver})",
      "description": "Wrap the expression in a `Result::Err`",
      "scope": "expr"
    },
    "Some": {
      "postfix": "some",
      "body": "Some(${receiver})",
      "description": "Wrap the expression in an `Option::Some`",
      "scope": "expr"
    }
  },
  "languageserver": {
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": [
        ".stack.yaml",
        ".hie-bios",
        "BUILD.bazel",
        "cabal.config",
        "package.yaml"
      ],
      "filetypes": ["hs", "lhs", "haskell"]
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": []
    },
    "lua_language_server": {
      "settings": {
        "Lua": {
          "workspace": {
            "maxPreload": 2000,
            "preloadFileSize": 1000,
            "checkThirdParty": false
          },
          "runtime": {
            "version": "LuaJIT"
          },
          "filetypes": ["lua"],
          "diagnostics": {
            "enable": true,
            "globals": [
              "hs",
              "vim",
              "it",
              "describe",
              "before_each",
              "after_each"
            ],
            "disable": ["lowercase-global"]
          },
          "completion": {
            "keywordSnippet": "Disable"
          },
          "telemetry": {
            "enable": false
          }
        }
      }
    },
    "cmake": {
      "command": "cmake-language-server",
      "filetypes": ["cmake"],
      "rootPatterns": ["build/"],
      "initializationOptions": {
        "buildDirectory": "build"
      }
    }
  },
  "snippets.ultisnips.directories": [
    "$HOME/.config/nvim/autoload/plugged/vim-snippets/UltiSnips/",
    "$HOME/.config/nvim/UltiSnips"
  ],
  "snippets.userSnippetsDirectory": "~/.config/nvim/Ultisnips",
  "json.schemas": [
    {
      "fileMatch": [".vimspector.json"],
      "url": "https://puremourning.github.io/vimspector/schema/vimspector.schema.json"
    }
  ],
  "snippets.ultisnips.pythonPrompt": false
}
